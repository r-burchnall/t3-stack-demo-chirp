import { type NextPage } from "next";
import Head from "next/head";

import { api, type RouterOutputs } from "~/utils/api";
import { SignInButton, useAuth, useUser } from "@clerk/nextjs";

type PostWithAuthor = RouterOutputs['posts']['getAll'][number]
const PostView = (props: PostWithAuthor) => {
    const {post, author} = props
    return (
        <div className="flex gap-3 w-full p-4 border-b border-slate-200 justify-center">
            <img className="h-14 w-14 rounded-full" src={author.profileImageUrl} alt={author.username} />
            <div className="flex flex-col">
                <div>{`@${author.username}`}</div>
                <div>{post.content}</div>
            </div>
        </div>
    )
}

const CreatePostWizard = () => {
    const {user} = useUser()

    if (!user) return null

    return (
        <div className="flex gap-3 w-full">
            <img className="h-14 w-14 rounded-full" src={user.profileImageUrl} alt={user.username} />
            <input type="text" placeholder="Type some emojis!" className="bg-transparent grow outline-none" />
        </div>
    )
}

const Home: NextPage = () => {
    const { isSignedIn } = useAuth()

    const { data, isLoading } = api.posts.getAll.useQuery()

    if (isLoading) return <div>Loading...</div>

    if (!data) return <div>Something went wrong</div>

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main
                className="flex justify-center h-screen">
                <div className="w-full md:max-w-2xl border-x border-slate-400 h-screen">
                    <div className="flex border-b border-slate-400 p-4">
                        {!isSignedIn && <SignInButton />}
                        {!!isSignedIn && <CreatePostWizard />}
                    </div>
                    <div className="flex flex-col">
                        {data?.map((fullPost) => (
                            <PostView {...fullPost} key={fullPost.post.id} />
                        ))}
                    </div>
                </div>
            </main>
        </>
    );
};

export default Home;
